"use strict";(self.webpackChunkseven_innovation_base_website=self.webpackChunkseven_innovation_base_website||[]).push([[580],{3905:function(n,t,e){e.d(t,{Zo:function(){return p},kt:function(){return b}});var r=e(67294);function a(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function i(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,r)}return e}function o(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?i(Object(e),!0).forEach((function(t){a(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):i(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function l(n,t){if(null==n)return{};var e,r,a=function(n,t){if(null==n)return{};var e,r,a={},i=Object.keys(n);for(r=0;r<i.length;r++)e=i[r],t.indexOf(e)>=0||(a[e]=n[e]);return a}(n,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(r=0;r<i.length;r++)e=i[r],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(a[e]=n[e])}return a}var u=r.createContext({}),s=function(n){var t=r.useContext(u),e=t;return n&&(e="function"==typeof n?n(t):o(o({},t),n)),e},p=function(n){var t=s(n.components);return r.createElement(u.Provider,{value:t},n.children)},c={inlineCode:"code",wrapper:function(n){var t=n.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(n,t){var e=n.components,a=n.mdxType,i=n.originalType,u=n.parentName,p=l(n,["components","mdxType","originalType","parentName"]),m=s(e),b=a,f=m["".concat(u,".").concat(b)]||m[b]||c[b]||i;return e?r.createElement(f,o(o({ref:t},p),{},{components:e})):r.createElement(f,o({ref:t},p))}));function b(n,t){var e=arguments,a=t&&t.mdxType;if("string"==typeof n||a){var i=e.length,o=new Array(i);o[0]=m;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=n,l.mdxType="string"==typeof n?n:a,o[1]=l;for(var s=2;s<i;s++)o[s]=e[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,e)}m.displayName="MDXCreateElement"},89322:function(n,t,e){e.r(t),e.d(t,{assets:function(){return p},contentTitle:function(){return u},default:function(){return b},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return c}});var r=e(87462),a=e(63366),i=(e(67294),e(3905)),o=["components"],l={slug:"conversion-of-numbers",title:"\u8fdb\u5236\u8f6c\u6362\u9898\u76ee\u89e3\u6790",author:"CkaiGrac",author_title:"\u5e94\u7528\u8f6f\u4ef6\u7814\u53d1\u90e8",author_url:"https://github.com/CkaiGrac",author_image_url:"https://avatars1.githubusercontent.com/u/44230699?s=460&v=4",tags:["Algorithms"]},u=void 0,s={permalink:"/blog/conversion-of-numbers",editUrl:"https://github.com/seven-innovation-base/official-website/tree/main/blog/2019-11-02-\u8fdb\u5236\u8f6c\u6362\u89e3\u6790.md",source:"@site/blog/2019-11-02-\u8fdb\u5236\u8f6c\u6362\u89e3\u6790.md",title:"\u8fdb\u5236\u8f6c\u6362\u9898\u76ee\u89e3\u6790",description:"\u4e00\u3001\u9898\u76ee\u63cf\u8ff0",date:"2019-11-02T00:00:00.000Z",formattedDate:"November 2, 2019",tags:[{label:"Algorithms",permalink:"/blog/tags/algorithms"}],readingTime:7.175,truncated:!0,authors:[{name:"CkaiGrac",title:"\u5e94\u7528\u8f6f\u4ef6\u7814\u53d1\u90e8",url:"https://github.com/CkaiGrac",imageURL:"https://avatars1.githubusercontent.com/u/44230699?s=460&v=4"}],frontMatter:{slug:"conversion-of-numbers",title:"\u8fdb\u5236\u8f6c\u6362\u9898\u76ee\u89e3\u6790",author:"CkaiGrac",author_title:"\u5e94\u7528\u8f6f\u4ef6\u7814\u53d1\u90e8",author_url:"https://github.com/CkaiGrac",author_image_url:"https://avatars1.githubusercontent.com/u/44230699?s=460&v=4",tags:["Algorithms"]},prevItem:{title:"\u642d\u5efa\u5c5e\u4e8e\u81ea\u5df1\u7684\u535a\u5ba2",permalink:"/blog/create-blog"},nextItem:{title:"\u7528win10\u81ea\u5e26\u865a\u62df\u673aHyper-V\u73a9\u8f6cLinux",permalink:"/blog/win10-hyper-v"}},p={authorsImageUrls:[void 0]},c=[{value:"\u4e00\u3001\u9898\u76ee\u63cf\u8ff0",id:"\u4e00\u9898\u76ee\u63cf\u8ff0",level:2},{value:"\u4e8c\u3001\u95ee\u9898\u5206\u6790",id:"\u4e8c\u95ee\u9898\u5206\u6790",level:2}],m={toc:c};function b(n){var t=n.components,e=(0,a.Z)(n,o);return(0,i.kt)("wrapper",(0,r.Z)({},m,e,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"\u4e00\u9898\u76ee\u63cf\u8ff0"},"\u4e00\u3001\u9898\u76ee\u63cf\u8ff0"),(0,i.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u7528\u8fd9\u6837\u7684\u65b9\u5f0f\u6765\u8868\u793a\u4e00\u4e2a\u5341\u8fdb\u5236\u6570\uff1a\n\u5c06\u6bcf\u4e2a\u963f\u62c9\u4f2f\u6570\u5b57\u4e58\u4ee5\u4e00\u4e2a\u4ee5\u8be5\u6570\u5b57\u6240\u5904\u4f4d\u7f6e\u7684\uff08\u503c\u51cf1\uff09\u4e3a\u6307\u6570\uff0c\u4ee510\u4e3a\u5e95\u6570\u7684\u5e42\u4e4b\u548c\u7684\u5f62\u5f0f\u3002\u4f8b\u5982\uff1a123\u53ef\u8868\u793a\u5341\u8fdb\u5236\u4e3a1x10^2+2x10^1+3x10^0\u8fd9\u6837\u7684\u5f62\u5f0f\u3002\n\u4e0e\u4e4b\u76f8\u4f3c\u7684\uff0c\u5bf9\u4e8c\u8fdb\u5236\u6570\u6765\u8bf4\uff0c\u4e5f\u53ef\u8868\u793a\u6210\u6bcf\u4e2a\u4e8c\u8fdb\u5236\u6570\u7801\u4e58\u4ee5\u4e00\u4e2a\u4ee5\u8be5\u6570\u5b57\u6240\u5904\u4f4d\u7f6e\u7684\uff08\u503c-1\uff09\u4e3a\u6307\u6570\uff0c\u4ee52\u4e3a\u5e95\u6570\u7684\u5e42\u4e4b\u548c\u7684\u5f62\u5f0f\u3002\u4e00\u822c\u8bf4\u6765\uff0c\u4efb\u4f55\u4e00\u4e2a\u6b63\u6574\u6570R\u6216\u4e00\u4e2a\u8d1f\u6574\u6570-R\u90fd\u53ef\u4ee5\u88ab\u9009\u6765\u4f5c\u4e3a\u4e00\u4e2a\u6570\u5236\u7cfb\u7edf\u7684\u57fa\u6570\u3002\u5982\u679c\u662f\u4ee5R\u6216-R\u4e3a\u57fa\u6570\uff0c\u5219\u9700\u8981\u7528\u5230\u7684\u6570\u7801\u4e3a\n0\uff0c1\uff0c\u2026.R-1\u3002\u4f8b\u5982\uff0c\u5f53R=7\u65f6\uff0c\u6240\u9700\u7528\u5230\u7684\u6570\u7801\u662f0\uff0c1\uff0c2\uff0c3\uff0c4\uff0c5\u548c6\uff0c\u8fd9\u4e0e\u5176\u662fR\u6216-R\u65e0\u5173\u3002\u5982\u679c\u4f5c\u4e3a\u57fa\u6570\u7684\u6570\u7edd\u5bf9\u503c\u8d85\u8fc710\uff0c\u5219\u4e3a\u4e86\u8868\u793a\u8fd9\u4e9b\u6570\u7801\uff0c\u901a\u5e38\u4f7f\u7528\u82f1\u6587\u5b57\u6bcd\u6765\u8868\u793a\u90a3\u4e9b\u5927\u4e8e9\u7684\u6570\u7801\u3002\u4f8b\u5982\u5bf916\u8fdb\u5236\u6570\u6765\u8bf4\uff0c\u7528A\u8868\u793a10\uff0c\u7528B\u8868\u793a11\uff0c\u7528C\u8868\u793a12\uff0c\u7528D\u8868\u793a13\uff0c\u7528E\u8868\u793a14\uff0c\u7528F\u8868\u793a15\u3002\n\u5728\u8d1f\u8fdb\u5236\u6570\u4e2d\u662f\u7528-R\u4f5c\u4e3a\u57fa\u6570\uff0c\u4f8b\u5982-15\uff08\u5341\u8fdb\u5236\uff09\u76f8\u5f53\u4e8e110001\uff08-2\u8fdb\u5236\uff09\uff0c\u5e76\u4e14\u5b83\u53ef\u4ee5\u88ab\u8868\u793a\u4e3a2\u7684\u5e42\u7ea7\u6570\u7684\u548c\u6570\uff1a"),(0,i.kt)("p",null,"110001=1",(0,i.kt)("em",{parentName:"p"},"(-2)^5+1"),"(-2)^4+0","*","(-2)^3+0","*","(-2)^2+0","*","(-2)^1+1","*","(-2)^0"),(0,i.kt)("p",null,"\u8bbe\u8ba1\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u8bfb\u5165\u4e00\u4e2a\u5341\u8fdb\u5236\u6570\u548c\u4e00\u4e2a\u8d1f\u8fdb\u5236\u6570\u7684\u57fa\u6570\uff0c\u5e76\u5c06\u6b64\u5341\u8fdb\u5236\u6570\u8f6c\u6362\u4e3a\u6b64\u8d1f\u8fdb\u5236\u4e0b\u7684\u6570\uff1a-R\u2208\uff5b-2\uff0c-3\uff0c-4\uff0c\u2026\uff0c-20\uff5d\u3002"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u8f93\u5165")),(0,i.kt)("p",null,"\u6bcf\u4e2a\u6d4b\u8bd5\u6587\u4ef6\u53ea\u5305\u542b\u4e00\u7ec4\u6d4b\u8bd5\u6570\u636e\uff0c\u6bcf\u7ec4\u8f93\u5165\u4e24\u4e2a\u6574\u6570\uff0c\u7b2c\u4e00\u4e2a\u662f\u5341\u8fdb\u5236\u6570N\uff08-32768\\<=N\\<=32767\uff09\uff1b\u7b2c\u4e8c\u4e2a\u662f\u8d1f\u8fdb\u5236\u6570\u7684\u57fa\u6570-R\u3002"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u8f93\u51fa")),(0,i.kt)("p",null,"\u5bf9\u4e8e\u6bcf\u7ec4\u8f93\u5165\u6570\u636e\uff0c\u8f93\u51fa\u6b64\u8d1f\u8fdb\u5236\u6570\u53ca\u5176\u57fa\u6570\uff0c\u82e5\u6b64\u57fa\u6570\u8d85\u8fc710\uff0c\u5219\u53c2\u716716\u8fdb\u5236\u7684\u65b9\u5f0f\u5904\u7406\u3002"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u8f93\u5165\u6837\u4f8b1")),(0,i.kt)("p",null,"3000 -2"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u8f93\u51fa\u6837\u4f8b1")),(0,i.kt)("p",null,"30000=11011010101110000(base-2)"),(0,i.kt)("h2",{id:"\u4e8c\u95ee\u9898\u5206\u6790"},"\u4e8c\u3001\u95ee\u9898\u5206\u6790"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u6d89\u53ca\u77e5\u8bc6\u70b9\uff1a")," - \u5341\u8fdb\u5236\u6570\u8f6c\u5316\u6210\u4e8c\u8fdb\u5236\u6216\u8005\u516b\u8fdb\u5236\u6216\u800516\u8fdb\u5236\u3002 - \u77ed\u9664\u6cd5\u3002 - \u6570\u5b57\u7684\u6c42\u6a21\u53d6\u4f59\u3002"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u6ce8\u610f\uff1a\u4e00\u4e2a\u8d1f\u6570\u8868\u793a\u6210\u4e8c\u8fdb\u5236\u7684\u65b9\u6cd5\u53ef\u4ee5\u5148\u6c42\u5b83\u76f8\u53cd\u6570\u7684\u4e8c\u8fdb\u5236\u6570\uff0c\u7136\u540e\u53d6\u53cd\u7801\uff0c\u6700\u540e\u53d6\u8865\u7801\uff0c\u6240\u5f97\u7ed3\u679c\u5c31\u662f\u8d1f\u6570\u7684\u4e8c\u8fdb\u5236\u5f62\u5f0f\u3002\u4e0d\u77e5\u9053\u4ec0\u4e48\u662f\u539f\u7801\u3001\u8865\u7801\u3001\u53cd\u7801\u7684\u4e0d\u8981\u7d27\u4e0e\u89e3\u672c\u9898\u6ca1\u6709\u592a\u5927\u5173\u7cfb\u3002")),(0,i.kt)("p",null,"\u6bd4\u8f83\u96be\u4e3a\u4eba\u7684\u4e8b\u60c5\u662f\uff0c\u9898\u76ee\u4e2d\u4ecb\u7ecd\u4e86\u4ec0\u4e48\u662f\u4e8c\u8fdb\u5236\u4e0e\u5341\u516d\u8fdb\u5236\uff0c\u4f46\u8981\u6211\u4eec\u6c42\u89e3\u4e00\u4e2a\u8d1f\u4e8c\u8fdb\u5236\u5230\u8d1f\u4e8c\u5341\u8fdb\u5236\u3002"),(0,i.kt)("p",null,"\u7b80\u5355\u4ecb\u7ecd\u4e00\u4e0b\u4ec0\u4e48\u662f\u77ed\u9664\u6cd5\n\u77ed\u9664\u6cd5\u662f\u5341\u8fdb\u5236\u8f6c\u6362\u6210\u4efb\u610f\u8fdb\u5236\u5f62\u5f0f\u7684\u8ba1\u7b97\u65b9\u6cd5\u3002",(0,i.kt)("strong",{parentName:"p"},"\u5341\u8fdb\u5236\u6570\u8f6c\u6362\u6210\u4efb\u610f\u8fdb\u5236\u53ea\u8981\u7528\u77ed\u9664\u6cd5\u9664\u5bf9\u5e94\u7684\u7801\u6570\u5c31\u884c\u4e86"),",\u6bd4\u5982,\u5341\u8fdb\u5236\u65701500\u8f6c\u6362\u6210\u4e8c\u8fdb\u5236\u5f62\u5f0f\u5e94\u8be5\u7528\u77ed\u9664\u6cd5\u96642\uff0c\u5982\u679c\u8981\u8f6c\u6210\u5341\u516d\u8fdb\u5236\u90a3\u5e94\u8be5\u77ed\u966416\uff0c\u8f6c\u6210\u4e8c\u5341\u8fdb\u5236\u5e94\u8be5\u77ed\u966420\u3002\n",(0,i.kt)("strong",{parentName:"p"},"\u5341\u8fdb\u5236\u657013\u8f6c\u6362\u6210\u4e8c\u8fdb\u5236\u7684\u8ba1\u7b97\u8fc7\u7a0b\uff1a")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"2  |__13__  1\n  2  |__6__  0\n    2  |__3__  1\n              1\n")),(0,i.kt)("p",null,"\u6240\u4ee513\u7684\u4e8c\u8fdb\u5236\u5f62\u5f0f\u662f1101\uff0c\u6ce8\u610f\u8981\u4ece\u4e0b\u5f80\u4e0a\u5199\u3002 \u77ed\u9664\u6cd5\u53f3\u8fb9\u7684\u503c\u662f\u4f59\u6570\uff0c13\u96642\u7b496\u4f591\u3002"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u5341\u8fdb\u5236\u6570-15\u8f6c\u6362\u6210\u8d1f\u4e8c\u8fdb\u5236\u7684\u8ba1\u7b97\u8fc7\u7a0b\uff1a")," ",(0,i.kt)("strong",{parentName:"p"},"\u8fd9\u4e2a\u8fc7\u7a0b\u9700\u8981\u7279\u522b\u6ce8\u610f\uff01")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"\u9519\u8bef\u7684\u8fd0\u7b97\uff1a\n\n  -2  |__-15__  -1\n                 7\n-1 = -15-(-2x7)\n\u53d1\u73b0\u77ed\u9664\u53f3\u8fb9\u4f59\u6570\u662f-1\uff0c\u663e\u7136\u9519\u4e86\uff0c\u4e8c\u8fdb\u5236\u5f62\u5f0f\u4f59\u6570\u53ea\u80fd\u4e3a0\u62161\uff0c\u540c\u7406\u5341\u516d\u8fdb\u5236\u4f59\u6570\u53ea\u80fd\u4e3a0~15\n\n\u6b63\u786e\u7684\u8fd0\u7b97\uff1a\u4f59\u6570\u4e3a\u8d1f\u6570\u65f6\uff0c\u5546\u5e94\u8be5+1\uff0c\u4f7f\u5f97\u4f59\u6570\u4e0d\u4e3a\u8d1f\u6570\u3002\n\n\n  -2  |__-15__  1\n     -2  |__8__  0\n       -2  |__-4__  0\n         -2  |__2__  0\n            -2  |__-1__  1\n                         1\n\n\n1 = -15-(-2x8) = -15+16\n0 = 8-(-2x-4)\n0 = -4-(-2x2)\n0 = 2-(-2x-1)\n1 = -1-(-2x1)\n")),(0,i.kt)("p",null,"\u6240\u4ee5-15\u7684\u8d1f\u4e8c\u8fdb\u5236\u4e3a110001\u3002 \u591a\u95ee\u5c31\u4f1a\u4e86\u3002"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"\u6240\u4ee5\u6211\u4eec\u628a\u8981\u505a\u7684\u4e8b\u60c5\u5206\u4e3a\u4ee5\u4e0b\u51e0\u6b65\uff1a")," -\u9996\u5148\u8fdb\u884c\u6c42\u6a21\u8fd0\u7b97\uff0c\u5224\u65ad\u4f59\u6570\u662f\u5426\u4e3a\u8d1f\u6570 -\u5982\u679c\u4f59\u6570\u4e3a\u8d1f\u6570\uff0c\u5219\u5546+1\uff0c\u518d\u6c42\u4f59\u6570\uff0c\u628a\u4f59\u6570\u8bb0\u5f55\u4e0b\u6765\n-\u5982\u679c\u4f59\u6570\u4e0d\u4e3a\u8d1f\u6570\uff0c\u6b63\u5e38\u6c42\u6a21\u8fd0\u7b97\uff0c\u628a\u4f59\u6570\u8bb0\u5f55\u4e0b\u6765"),(0,i.kt)("p",null,"\u4e3a\u4e86\u65b9\u4fbf\u8f6c\u6362\uff0c\u5b9a\u4e49\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4charList\uff0c\u7528\u4e8e\u5341\u516d\u8fdb\u5236\u5f80\u540e\u4f59\u6570\u5bf9\u5e94\u7684\u5b57\u6bcdA\u3001B\uff5eF\u3002"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Java\u4ee3\u7801\u5b9e\u73b0\uff1a")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},"import java.util.ArrayList;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class Main {\n    public static void main(String[] args) {\n\n        Scanner sc = new Scanner(System.in);\n        int num = sc.nextInt();// \u624b\u52a8\u8f93\u5165\n        int base = sc.nextInt(); // \u624b\u52a8\u8f93\u5165\n        int num_copy = num;\n        int quotient = 0;// \u5546\n        List<Character> list = new ArrayList<>();// \u52a8\u6001\u6570\u7ec4\u6765\u5b58\uff0c\u56e0\u4e3a\u4e0d\u77e5\u9053\u8f6c\u6362\u540e\u6709\u51e0\u4f4d\n        char[] charList = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',\n                'I', 'J' };\n        while (num != 0) {\n            int mod = num % base;\n            if (mod < 0) {\n                quotient = num / base + 1;\n                mod = num - quotient * base;\n                list.add(charList[mod]);\n                num = quotient;\n            }else{\n                mod = num % base;\n                num /= base;\n                list.add(charList[mod]);\n            }\n\n        }\n        Collections.reverse(list);//\u6570\u7ec4\u5012\u5e8f\n        StringBuilder sb = new StringBuilder(256);\n        for (int i = 0; i < list.size(); i++) {\n            sb.append(list.get(i));\n        }\n        System.out.println(num_copy+\"=\"+sb.toString() + \"(base\" + base + \")\");\n        sc.close();\n    }\n}\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"C\u4ee3\u7801\u5b9e\u73b0\uff1a")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <stdio.h>\n#include <stdlib.h>\nint main() {\n    int num = 0;\n    int base = 0;\n    scanf(\"%d\", &num);   //\u624b\u52a8\u8f93\u5165\n    scanf(\"%d\", &base);  //\u624b\u52a8\u8f93\u5165\n    int num_copy = num;\n    int quotient = 0;  // \u5546\n\n    char *list;  // C\u8bed\u8a00\u4e2d\u7684\u52a8\u6001\u6570\u7ec4\n    list = (char *)malloc(256 * sizeof(char));\n    char charList[] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n                       'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J'};\n\n    int i = 0;  //\u8ba1\u6570\u5668\n    while (num != 0) {\n        int mod = num % base;\n        if (mod < 0) {\n            quotient = num / base + 1;\n            mod = num - quotient * base;\n            list[i] = charList[mod];\n            num = quotient;\n            i++;\n        } else {\n            mod = num % base;\n            num /= base;\n            list[i] = charList[mod];\n            i++;\n        }\n    }\n\n    int k = 0;\n    printf(\"%d=\", num_copy);\n    for (int i = 256; i >= 0; i--) {\n        if (list[i] == NULL) {\n            continue;\n        }\n        printf(\"%c\", list[i]);\n    }\n    printf(\"(base%d)\", base);\n    return 0;\n}\n")))}b.isMDXComponent=!0}}]);